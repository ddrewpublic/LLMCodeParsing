Here is the code with developer comments:

**Part I:**

```c++
int fenjieyinshi(int n,int m)//function to find the sum of all divisors of a number
{
    int i=0; //initialize a counter variable
    int sum=1; //initialize a variable to store the sum of divisors
    if(n<m) //if n is less than m, return 0 because there are no divisors
        return 0; //return 0
    else
    {
        for(i=m;i<n;i++) //start from m and traverse up to n
            if(n%i==0) //if i is a divisor of n
                sum+=fenjieyinshi(n/i,i); //recursively call the function for the remaining dividend
        return sum; //return the sum of all divisors
    }
}
```

**Part II: Summary**

This code consists of two main parts: a function `fenjieyinshi` and a `main` function. The `fenjieyinshi` function calculates the sum of all divisors of a given number `n`, excluding itself. It recursively iterates through the divisors of `n` starting from `m`, and adds them to the sum. If `n` is less than `m`, it immediately returns 0 because there are no divisors to consider.

The `main` function reads in an integer `n` and iterates through a series of integers `a`. If `a` is 1, it simply prints 1. Otherwise, it calls the `fenjieyinshi` function with `a` and 2 as arguments, and prints the result. This may be used to calculate the sum of divisors for a sequence of numbers, with a higher interest in the sum of divisors for the numbers that are not divisible by 2 or 3.