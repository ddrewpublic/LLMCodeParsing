**Part I**

```cpp
/**
* @file homework.cpp
* @author ??
* @date 2010?12?03
* @description
* ??????: 1090 ????
*/
void jisuan(int ,int);
int times, sum, i, n;
int main()
{	
	// input the number of times from cin
	cin >> times;
	for (i=0;i<times;i++)
	{
		sum = 0;
		// input the number n from cin
		cin >> n;
		jisuan (n, 2);
		// print the result
		cout << sum << endl;
	}
	return 0;
}
```

```cpp
void jisuan(int n, int j)
{
	// initialize a variable i
	int i;
	for (i=j;i<=n;i++)
	{
		if (n > 1)
		{
			// check if n is divisible by i
			if (n % i == 0)
			{
				// check if n is greater than i
				if (n % i != 0 && n > i)
					sum++; // increment sum if n is greater than i
				// recursive call to jisuan with n divided by i
				jisuan (n / i, i);
			}
		}
		if (n == i)
			sum ++; // increment sum when n is equal to i
	}
}
```

**Part II**

Summary:
This program is designed to calculate the number of factors of a given number `n`. It uses a recursive function `jisuan` to iterate through the factors of `n` from `j` to `n`, and increments a running total `sum` for each factor. The program takes as input the number of times to perform this calculation, and for each iteration, it inputs the number `n` and prints the result to the console.

The `jisuan` function takes two arguments, `n` and `j`, where `j` is the starting factor to consider. The function iterates through factors of `n` from `j` to `n`, and for each factor `i`, it checks if `n` is divisible by `i`. If `n` is greater than `i`, it increments the `sum` variable by 1. The function then recursively calls itself with `n` divided by `i` and `i` as the new arguments. If `n` is equal to `i`, it increments the `sum` variable by 1 without calling the function recursively. At the end of each iteration, the program prints the result to the console.