**Part I**

```c
int way(int x,int m)
{
	// Initialize sum to 0 and p to 0
    int sum=0,p=0,i;
    // Loop through all numbers from m to x
    for(i=m;i<x;i++)
    {
        // If x is divisible by i
        if(x%i==0)
        {
            // Increment p and recursively call way with x/i and i
            p++;
            sum=sum+way(x/i,i);
        }
    }
    // Add 1 to the sum
    sum=sum+1;
    // If p is 0, set sum to 1
    if(p==0) sum=1;
    // If m is greater than x, set sum to 0
    if(m>x) sum=0;
    // Return the sum
    return(sum);
}
```

**Part II**

This code implements a function called "way" that calculates the sum of the divisors of a given number "x", starting from a specified number "m" up to x. The function works by recursively iterating through all numbers from "m" to "x" and adding the ones that divide "x" to the total sum. If no numbers from "m" to "x" divide "x", the function returns 1. If "m" is greater than "x", the function returns 0. The main function reads in a series of numbers and prints the sum of the divisors of each number starting from 2.