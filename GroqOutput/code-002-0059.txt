**Part I**
```c
void main()
{
    // Declare an array to hold 999 book structures
    // Each book structure holds an integer number and a character array for the author name
    struct book{int num;char author[26];}b[999];
    
    // Declare an integer array to hold the frequency of each letter in the author names
    int a[26]={0},n,i,j,k,max=0;
    
    // Read the number of books from the input
    scanf("%d",&n);
    
    // Read the details of each book (number and author name) from the input
    for(i=0;i<n;i++)scanf("%d %s",&b[i].num,b[i].author);
    
    // Iterate over each letter of the alphabet (a to z)
    for(i=0;i<26;i++)
    {
        // Iterate over each book
        for(j=0;j<n;j++)
        {
            // Initialize a variable k to 0
            k=0;
            
            // Iterate over each character in the author name
            while(b[j].author[k]!='\0')
            {
                // If the current character is equal to the current letter (a=0, b=1, ..., z=25)
                if(b[j].author[k]==i+65)
                {
                    // Increment the frequency of the current letter
                    a[i]++;
                }
                k++;
            }
        }
    }
    
    // Find the letter with the maximum frequency
    for(i=0;i<26;i++)if(max<a[i])max=a[i];
    
    // Initialize the index i to 0
    i=0;
    
    // Continue until the maximum frequency is reached
    while(max!=a[i])i++;
    
    // Print the letter with the maximum frequency
    printf("%c\n%d\n",i+65,a[i]);
    
    // Iterate over each book
    for(j=0;j<n;j++)
    {
        // Initialize a variable k to 0
        k=0;
        
        // Iterate over each character in the author name until the current letter is found
        while(b[j].author[k]!=i+65&&b[j].author[k]!='\0')k++;
        
        // If the current letter is found in the author name, print the book number
        if(b[j].author[k]==i+65)printf("%d\n",b[j].num);
    }
}
```

**Part II**

This C program reads the details of a number of books from the input, including the number and author name of each book. It then calculates the frequency of each letter in the author names and finds the letter with the maximum frequency. Finally, it prints the letter with the maximum frequency and the numbers of the books that have authors with names starting with that letter.

The program uses two nested loops to iterate over each letter of the alphabet and each book, and calculates the frequency of each letter by iterating over each character in each author name. It then finds the letter with the maximum frequency by iterating over each letter and comparing its frequency to the current maximum. The program also uses while loops to find the current letter in each author name and to find the books that have authors with names starting with the letter with the maximum frequency.