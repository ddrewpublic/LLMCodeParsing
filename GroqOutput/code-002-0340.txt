**Part I: Code**

```
struct book
{
    int num;
    char name[26];
};
```
Declare a struct named `book` with two members: `num` of type `int` and `name` of type `char` array with a size of 26.

```
struct name
{
    char na;
    int n;
};
```
Declare another struct named `name` with two members: `na` of type `char` and `n` of type `int`.

```
void main()
{
```
Start the `main` function which is the entry point of the program.

```
    int n,i,j,k,s,max=0;
```
Declare several integer variables: `n`, `i`, `j`, `k`, `s`, and `max`. Initialize `max` to 0.

```
    struct book a[1000];
    struct name b[26];
```
Declare two arrays: `a` of type `book` with a size of 1000 and `b` of type `name` with a size of 26.

```
    scanf("%d",&n);
```
Read an integer value from the standard input using `scanf` and store it in `n`.

```
    for(i=0;i<=n-1;i++)
    {
        scanf("%d%s",&a[i].num,a[i].name);
    }
```
Read `n` number of sets of values: an integer value for `num` and a string value for `name`, and store them in the `a` array.

```
    for(i=0;i<=25;i++)
    {
        b[i].na='A'+i;
        for(j=0,s=0;j<=n-1;j++)
        {
            for(k=0;k<=strlen(a[j].name)-1;k++)
            {
                if(b[i].na==a[j].name[k])
                {
                    s++;
                    break;
                }
            }
        }
        b[i].n=s;
    }
```
Initialize each element of the `b` array by iterating over each character in the `name` field of each `book` struct and count the occurrences of each character, storing the count in the `n` field of the corresponding `name` struct.

```
    for(i=0;i<=25;i++)
    {
        if(b[i].n>max)
        {
            max=b[i].n;
        }
    }
```
 Iterate over the `b` array and update the maximum count `max` if a higher count is found.

```
    for(i=0;i<=25;i++)
    {
        if(b[i].n==max)
        {
            printf("%c\n%d\n",b[i].na,b[i].n);
```
 Print the character and count for each element in the `b` array that has the maximum count `max`.

```
            for(j=0;j<=n-1;j++)
            {
                for(k=0;k<=strlen(a[j].name)-1;k++)
                {
                    if(b[i].na==a[j].name[k])
                    {
                        printf("%d\n",a[j].num);
                        break;
                    }
                }
            }
        }
    }
}
```
Print the corresponding book numbers for each character and count that has the maximum count `max`.

**Part II: Summary**

This C program reads a number of book records from the standard input, where each book record consists of an integer book number and a string book name. It then counts the occurrences of each character in the book names and prints the characters and their counts. The program finds the maximum count and prints all characters that have this maximum count, along with the corresponding book numbers.