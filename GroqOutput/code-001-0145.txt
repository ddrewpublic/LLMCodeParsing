Here is the code with developer comments added:

**Part I: Code**

```c
//*************************************************
//*file: 1000012912_006.cpp                       *
//*author: ???                                 *
//*date: 2010.12.01                               *
//*function: Summarizes the prime factors of a given number *
//*************************************************

#include <iostream>
#include <cmath>

int sum(int);                      // Function to calculate the sum of prime factors of a given number
int g_count, g_j;                        // Global variables to keep track of the count of prime factors and the current divisor

int main()
{
    int n, a, i;                        // Declare variables for the number of test cases, the test case number, and the result
    std::cin >> n;
    for ( i = 0; i < n; i ++ )
    {
        g_count = 0;
        g_j = 2;
        std::cin >> a;
        std::cout << sum(a) + 1 << std::endl; // Print the sum of prime factors plus 1
    }
    return 0;
}

int sum( int a)
{
    int i, b;                             // Declare variables for the current divisor and the square root of the number
    b = (int)sqrt( (double)a );
    for ( i = g_j; i <= b; i++ )           // Check divisors from g_j to the square root of a
    {
        if ( a % i == 0 )                  // If a is divisible by i
        {
            g_j = i;                       // Update the value of g_j to i
            g_count++;                     // Increment the count of prime factors
            sum( a / i );                 // Recursively call the function with a divided by i
        }
    }
    return g_count;
}
```

**Part II: Summary**

This program calculates the sum of prime factors of a given number and prints the result for a specified number of test cases. The function `sum(int)` recursively finds the prime factors of a number and returns their count. The main function takes an input integer and calls the `sum` function to calculate the sum of its prime factors, then prints the result. The program uses two global variables `g_count` and `g_j` to keep track of the count of prime factors and the current divisor, respectively. The program also uses the `sqrt` function from the `cmath` library to find the square root of a number.