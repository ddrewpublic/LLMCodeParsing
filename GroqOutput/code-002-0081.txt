Here is the code with developer comments:

```
void main()
{
    // Declare a 2D array to store words
    char w[999][26];

    // Declare a variable to store the maximum frequency character
    char m;

    // Declare two arrays to store frequencies and indices
    int a[999], c[26];

    // Declare variables to store the number of words and the maximum frequency
    int i, j, n, t, max;

    // Read the number of words
    scanf("%d", &n);

    // Initialize the frequency array with 0 for each character
    for (i = 0; i <= 25; i++) {
        c[i] = 0;
    }

    // Read the words and store their lengths in the array a
    for (i = 0; i <= n - 1; i++) {
        scanf("%d", &a[i]);
        scanf("%s", w[i]);
    }

    // Count the frequency of each character in each word
    for (i = 0; i <= n - 1; i++) {
        for (j = 0; w[i][j] != '\0'; j++) {
            c[w[i][j] - 65] += 1;
        }
    }

    // Find the maximum frequency character
    max = c[0];
    m = 65;
    for (i = 0; i <= 25; i++) {
        if (c[i] > max) {
            max = c[i];
            m = i + 65;
        }
    }

    // Print the maximum frequency character
    printf("%c\n", m);

    // Print the maximum frequency
    printf("%d\n", max);

    // Print the indices of the words that contain the maximum frequency character
    for (i = 0; i <= n - 1; i++) {
        for (j = 0; w[i][j] != '\0'; j++) {
            if (w[i][j] == m) {
                printf("%d\n", a[i]);
            }
        }
    }
}
```

**Part II: Explanation**

This program reads a list of words, counts the frequency of each character in each word, and finds the character that appears most frequently. It then prints the maximum frequency character and the frequencies of all the words that contain this character.

The program uses two arrays, `w` and `a`, to store the words and their lengths, respectively. It uses another array `c` to store the frequency of each character. The `m` variable is used to store the maximum frequency character, and `max` is used to store the maximum frequency.

The program first reads the number of words and initializes the frequency array. It then reads the words and their lengths, and counts the frequency of each character in each word. After that, it finds the maximum frequency character and prints it along with its frequency.

Finally, the program prints the indices of the words that contain the maximum frequency character. It does this by iterating over each word and checking each character. If the character matches the maximum frequency character, it prints the index of the word.