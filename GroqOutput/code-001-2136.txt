**Part I**
```c
int f(int a,int b)
{
    // Declare variables
    int c,s=0,i;
    // Calculate integer square root of 'a'
    c=(int)sqrt(a);
    // Loop through numbers from 'b' to 'c' (inclusive)
    for(i=b;i<=c;i++)
    {
        // Check if 'a' is divisible by 'i'
        if(a%i==0)
        {
            // If divisible, calculate the sum recursively
            s=s+f(a/i,i);
        }
    }
    // Return the sum plus 1
    return s+1;
}
```
**Part II**

This program is designed to find the sum of all proper divisors of a given number. The function `f(a, b)` takes two inputs, `a` being the number and `b` being the starting number for the divisor search. It calculates the integer square root of `a` and then loops through numbers from `b` to the square root, checking if `a` is divisible by each number. If it is, it recursively calls `f` with the quotient `a/i` and `i` until `a` is no longer divisible. The sum of all these divisors is then returned with 1 added to it, as the number itself is also a divisor.

The `main` function reads in a number `n` and then reads in `n` more numbers. For each number, it calls `f` with 2 as the starting number and prints the result.