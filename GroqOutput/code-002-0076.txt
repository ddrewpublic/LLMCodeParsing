**Part I**

```
int main()
{
    // Declare a variable to store the number of books and an array to store the book orders
    int booknumber;
    int order[1000];
    
    // Declare an array to store the author names and a separate array to store the authors in alphabetical order
    char author[1000][27];
    char single_author[26]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};
    
    // Initialize an array to count the number of books for each author
    int author_booknumber[26]={0};
    
    // Declare variables for counting and temporary storage
    int i,j,k;
    int tmp;
    
    // Read the number of books from the input
    scanf("%d",&booknumber);
    
    // Loop through each book
    for(i=0;i<booknumber;i++)
    {
        // Read the book order and author name
        scanf("%d%s",&order[i],author[i]);
        
        // Loop through each character in the author name
        for(j=0;j<strlen(author[i]);j++)
        {
            // Loop through each author in alphabetical order
            for(k=0;k<26;k++)
            {
                // If the character matches the author, increment the count and break
                if(author[i][j]==single_author[k])
                {
                    author_booknumber[k]++;
                    break;
                }
            }
        }
    }
```

**Part II**

This code reads in the number of books, along with their orders and authors, and then prints out the author with the most books. The authors are stored in an array, with each element representing an author in alphabetical order. The code also counts the number of books for each author and keeps track of the author with the most books. Finally, it prints out the author with the most books, along with the number of books they have written.

This code provides a simple and efficient way to count the number of books for each author and identify the most prolific author. It can be easily modified to handle more complex book ordering tasks or to add additional features, such as book titles or genres.