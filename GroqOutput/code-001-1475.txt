**Part I**

```c
//**********************
//* ???   ????  *
//* 1200012878 ???  *
//* 12?1?            *
//**********************

int fengjie(int a, int b)
// Function to calculate the sum of proper divisors of a number
{
	if (a ==2 || a == 3)
	// Special case for prime numbers 2 and 3
		return 1;
	int sum = 1;
	// Initialize sum to 1, which is the sum of 1 itself
	int c = sqrt(a);
	// Calculate the square root of a for optimization
	for (int i = b; i <= c; i++)
	{
		if (a % i == 0)
		// Check if a is divisible by i
		{
			sum = sum + fengjie(a / i, i);
			// Recursively call fengjie for a/i and i
		}
	}
	return sum;
}

int main()
{
	// Main function
	int n, a;
	cin >> n;
	// Read the number of test cases
	for (int i = 1; i <= n; i++)
	{
		cin >> a;
		// Read the number to calculate divisors for
		cout << fengjie(a, 2) << endl;
		// Calculate and print the sum of divisors
	}
	return 0;
}
```

**Part II**

This code calculates the sum of proper divisors of a given number and applies it to calculate the sum of divisors of numbers input by the user. The fengjie function is an optimization of the sum of divisors calculation by recursively factoring the number. The main function reads the number of test cases, reads the number for each test case, and prints the sum of divisors for each number.