**Part I**

```c
int main()
{
    // Function prototype declaration for fun()
    int fun(int m,int n);
    // Declare integer variables n and i
    int n,i,sum;
    // Read the value of n from the user using scanf()
    scanf("%d",&n);
    // Allocate memory for an array of integers using malloc()
    int *p;
    p=(int *)malloc(sizeof(int)*n);
    // Read n integers from the user and store them in the array p
    for(i=0;i<n;i++)
        scanf("%d",&p[i]);
    // Perform division operation on p[i] and 1, and store the result in sum
    // Recursively call the fun function with updated parameters
    for(i=0;i<n;i++)
    {
        sum=0;
        sum=fun(p[i],1);
        printf("%d\n",sum);
    }
    // Free the dynamically allocated memory using free()
    free(p);
}
int fun(int m,int n)
{
    // Declare integer variables i and sum
    int i,sum=1;
    // Base case: If n is 1, perform loop operations
    if(n==1)
    {
        // Iterate from 2 to the square root of m
        for(i=2;i*i<=m;i++)
        {
            // Check if m is divisible by i
            if(m%i==0)
            {
                // Recursively call fun with updated parameters
                sum=sum+fun(m/i,i);
            }
        }
    }
    // If n is not 1, perform loop operations
    else
    {
        // Iterate from n to the square root of m
        for(i=n;i*i<=m;i++)
        {
            // Check if m is divisible by i
            if(m%i==0)
            {
                // Recursively call fun with updated parameters
                sum=sum+fun(m/i,i);
            }
        }
    }
    // Return the calculated sum
    return sum;
}
```

**Part II**

This code is designed to calculate the sum of all proper divisors of a given number for a set of numbers. The program uses dynamic memory allocation to store an array of integers and recursively calls a function to perform the calculations. The main function reads the number of integers to process from the user, allocates memory for an array of that size, and then reads the integers and assigns them to the array. The fun function takes two parameters, m and n, and calculates the sum of all proper divisors of m that are greater than or equal to n. The function uses a loop to check if any number from n to the square root of m is a divisor of m, and recursively calls itself if so.