**Part I**

```c
void main()
{
    // Declare int type variables f, k, i, j and n
    int f(int x,int m);
    int k,i,j,n,sum=0;

    // Read the value of n
    scanf("%d",&n);

    // Start a loop from 1 to n
    for(i=1;i<=n;i++)
    {
        // Read the value of k
        scanf("%d",&k);

        // Start a loop from 2 to k
        for(j=2;j<=k;j++)
        {
            // Check if k is divisible by j
            if(k%j==0)
            {
                // Call the function f with arguments k and j
                sum+=f(k,j);
            }
        }

        // Print the value of sum
        printf("%d\n",sum);

        // Reset the value of sum to 0
        sum=0;
    }
}

// Function f which takes two integer parameters x and m as arguments
int f(int x,int m)
{
    // Declare int type variable i and initialize sum to 0
    int i,sum=0;

    // Check if m is equal to x
    if(m==x)
        // Return 1 if m is equal to x
        sum=1;
    else
    {
        // Divide x by m
        x=x/m;

        // Start a loop from m to x
        for(i=m;i<=x;i++)
        {
            // Check if x is divisible by i
            if(x%i==0)
            {
                // Call the function f with arguments x and i
                sum+=f(x,i);
            }
        }
    }

    // Return the value of sum
    return sum;
}
```

**Part II**

This code calculates the number of divisors of a number k. The main function reads a value n and then for each number i from 1 to n, it reads a value k and calculates the number of divisors of k. The function f is recursive and it calculates the number of divisors of a number x by checking each number i from m to x whether i is a divisor of x. The function f also calls itself recursively until x is not divisible by any number.