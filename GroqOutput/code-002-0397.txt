**Part I**

```
struct BOOK
{
    int num;
    char name[26];
    int name_num[26];
}book[999];
```
// Define a structure BOOK with three members: num, name, and name_num.

```
void main()
{
    int n;                                  // Declare a variable n
    scanf("%d",&n);
```
// Read an integer value from the user and store it in the variable n.

```
    int i;
    for(i=0;i<n;i++){
        scanf("%d%s",&book[i].num,&book[i].name);    // Read an integer and a string
    }
```
// Read n integer-value-book pairs and store them in the 'book' array.

```
    int count[26]={0};
    int k;
    for(i=0;i<n;i++){
        int len;
        len=strlen(book[i].name);
        for(k=0;k<len;k++){
            book[i].name_num[k]=(int)book[i].name[k];
        }
    }
```
// Initialize an array 'count' to store the frequency of each letter.
// Convert each character in the 'name' string to its ASCII value and store it in the 'name_num' array.

```
    int j;
    int y;
    for(i=0;i<n;i++){
        int len_1;
        len_1=strlen(book[i].name);
        for(j=65;j<=90;j++){
            for(y=0;y<len_1;y++){
                if(book[i].name_num[y]==j){
                    count[j-65]++;
                }
            }
        }
    }
```
// Iterate over each book and count the frequency of each letter.

```
    int w;
    int max=count[0];
    int t=0;
    for(w=0;w<26;w++){
        if(count[w]>max){
            max=count[w];
            t=w;
        }
    }
```
// Find the letter with the maximum frequency and store its position in 't?'

```
    printf("%c\n%d\n",t+65,max);
```
// Print the letter with the maximum frequency and its count.

```
    int x;
    int total=0;
    for(i=0;i<n;i++){
        int length;
        length=strlen(book[i].name);
        for(x=0;x<length;x++){
            if(book[i].name_num[x]==t+65){
                printf("%d\n",book[i].num);
            }
        }
    }
```
// Find and print the numbers of the books that contain the letter with the maximum frequency.

**Part II**

The code defines a structure BOOK to store book information, including the book number and name. It then reads n book-value pairs and stores them in an array. The code iterates over each book, converting the name to a numerical array and counting the frequency of each letter. The letter with the maximum frequency is found and printed, along with its count. Finally, the code prints the numbers of the books that contain the letter with the maximum frequency.

The output will be the letter and count of the most frequent letter in the names, followed by the numbers of the books that contain this letter.