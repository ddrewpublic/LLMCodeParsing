**Part I: Code with Comments**

```c
//
//  main.cpp
//  HomeWork_11.14.Functions
//  ????
//  Created by ??? on 11/19/12.
//  Copyright (c) 2012 airjcy. All rights reserved.
//

//#include <string>
//??n???????????from

int num;
void divide(int n, int from) {
    // Loop from 'from' to 'n', incrementing 'i' each time
    int i;
    for (i = from; i < n; i++) {
        // Check if 'n' is divisible by 'i'
        if (n % i == 0) {
            // If 'n' / 'i' is less than 'i', return immediately
            if (n / i < i) {
                return;
            }
            // Increment the count of divisors
            num++;
            // Recursively call the 'divide' function with 'n' divided by 'i'
            divide(n / i, i);
        }
    }
}

// 20    2 10   2 2 5     4 5    5 4
int main(int argc, const char *argv[]) {
    
    // Read an integer 'n'
    int n;
    cin >> n;
    int i;
    // Read 'n' integers
    for (i = 0; i < n; i++) {
        int numberToDivide;
        cin >> numberToDivide;
        // Reset the count of divisors
        num = 0;
        // Call the 'divide' function with the current number and 2
        divide(numberToDivide, 2);
        // Print the count of divisors plus 1 (since we don't count 1)
        cout << num + 1 << endl;
    }
}
```

**Part II: Summary**

This program calculates the number of distinct proper divisors of a given integer. It uses a recursive function `divide` to perform this calculation. The `divide` function takes two parameters: the number to be divided, and the starting divisor. It loops from the starting divisor to the number, checking if the number is divisible by the current divisor. If it is, it increments the count of divisors and recursively calls itself with the number divided by the current divisor. The program reads a series of integers from the input, and for each integer, it calls the `divide` function with the integer and 2, and prints the resulting count of divisors plus 1. The output is the count of divisors for each number in the input sequence.