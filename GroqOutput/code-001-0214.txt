**Part II: Summary**

This C++ code is an implementation of a function called "deal" which calculates the sum of all proper divisors of a given number except for 1 and itself, along with a main function that takes input from the user and prints the results. The function uses a recursive approach to find the sum of the divisors.

**Part I: Code with Comments**

```cpp
// Function to calculate the sum of all proper divisors of a given number
int deal(int num, int p)
{
  // Initialize sum to 0 and variable i to 0
  int i, sum = 0;
  
  // If the number is 1, return 1 (the sum of divisors for 1 is 1)
  if(num == 1)
    return 1;
  
  // Loop from p to num (inclusive)
  for(i = p; i <= num; ++i)
  {
    // If the number is divisible by i
    if(num % i == 0)
    {
      // Recursively call deal with the quotient and return the result
      sum += deal(num / i, i);
    }
  }
  
  // Return the sum of divisors
  return sum;
}

// Main function
int main()
{
  int n, a;
  
  // Read the number of inputs from the user
  cin >> n;
  
  // Loop until the number of inputs is exhausted
  while(n--)
  {
    // Read the number for which divisors are to be calculated
    cin >> a;
    
    // Calculate and print the sum of divisors using deal function
    cout << deal(a, 2) << endl;
  }
  
  // Return 0 to indicate successful execution
  return 0;
}
```