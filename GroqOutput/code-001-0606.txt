**Part I**
```
int c;
// Define a variable 'c' of type integer to store the result

void cal(int n,int k);
// Declare a function 'cal' that takes two integer parameters 'n' and 'k'

int main(int argc)
{  int m,n,j;
   cin>>m;
   // Read an integer 'm' from the input stream
   for (j=1;j<=m;j++)
   { cin>>n;
    c=0;
     cal(n,1);
   cout<<c<<endl;}
   // Read an integer 'n' from the input stream for 'm' times
   // Initialize 'c' to 0 before calling the 'cal' function
   // Call the 'cal' function with parameters 'n' and 'k=1'
   // Print the result 'c' to the output stream
   return 0;
}
// Return 0 to indicate successful program execution
```
**Part II**

This program calculates the sum of all proper divisors of a given integer, including the number itself, from 1 to a certain upper bound 'n'. The function 'cal' is a recursive function that finds all divisors of a number 'n' and sums them up. The main function reads an integer 'm' from the input stream and then reads 'n' from the input stream 'm' times. For each 'n', it calls the 'cal' function with 'n' and 'k=1' as parameters, initializes 'c' to 0 before the call, and prints the result 'c' to the output stream.